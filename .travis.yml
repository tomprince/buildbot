# Travis CI configuration file
# http://about.travis-ci.org/docs/

addons:
  postgresql: "9.4"
  apt_packages:
    - enchant
    - aspell
    - aspell-en
    - ispell
    - iamerican

services:
  - mysql
  - postgresql

language: python

# Available Python versions:
# http://about.travis-ci.org/docs/user/ci-environment/#Python-VM-images
python:
  - "2.7"

env:
  # add extra tests in separate jobs
  - TWISTED=latest SQLALCHEMY=latest TESTS=js PARALLEL=-j2

cache:
  directories:
    - $HOME/.cache/pip
    - www/base/node_modules
    - www/codeparameter/node_modules
    - www/console_view/node_modules
    - www/waterfall_view/node_modules
    - www/nestedexample/node_modules
    - www/base/libs
    - www/codeparameter/libs
    - www/console_view/libs
    - www/waterfall_view/libs
    - www/nestedexample/libs


# Dependencies installation commands
install:
  - "echo 'travis_fold:start:upgrade-pip'; pip install -U pip; echo 'travis_fold:end:upgrade-pip'"
  # codecov is the interface to codecov.io; see after_success
  - "echo 'travis_fold:start:codecov'; pip install codecov; echo 'travis_fold:end:codecov'"
  - "echo 'travis_fold:start:tw'; [ $TWISTED = latest ] || pip install Twisted==$TWISTED; echo 'travis_fold:end:tw'"
  - "echo 'travis_fold:start:sa'; [ $SQLALCHEMY = latest ] || pip install sqlalchemy==$SQLALCHEMY; echo 'travis_fold:end:sa'"

  # mock is preinstalled on Travis
  # Install lz4 for log compression utest
  # Install python-future for py2/3 compatability
  # Install pyjade for custom templates tests
  # Install MySQL-python for tests that uses real MySQL
  # Install psycopg2 and pg8000 for tests that uses real PostgreSQL
  # Install boto and moto for running EC2 tests
  # Install txgithub to run buildbot.status.github module tests
  - |
      [ $TESTS != trial -a $TESTS != coverage -a $TESTS != lint -a $TESTS != js ] || \
      pip install -e pkg \
                  -e master[tls,test] \
                  -e slave \
                  -e worker \
                  MySQL-python \
                  psycopg2 \
                  pg8000 \

  - |
      [ $TESTS != trial_worker] || \
      pip install -e slave \
                  -e worker \

  - "[ $TESTS != trial_worker_only ] || pip install -e pkg -e master[tls,test] -e worker"

  # install buildbot_www from pip in order to run the www tests
  - "[ $TESTS != trial -a $TESTS != coverage ] || pip install --pre buildbot_www"


  # for python 3 we dont install everything yet..
  - |
      [ $TESTS != py3 ] || \
      pip install -e slave \
                  -e worker \
                  future

  # Run additional tests only in latest configuration
  # Astroid 1.3.0 dropped Python-2.6 spuport
  - "[ $TRAVIS_PYTHON_VERSION != 2.7 ] || pip install 'astroid<1.3.0'"

  # Note pylint version is pinned because newer versions can't import zope.interface - http://www.logilab.org/92792
  # astroid > 1.4 is incompatible with pylint 1.1.0
  - "[ $TESTS != lint ] || pip install pylint==1.1.0 pep8==1.5.7 flake8  astroid==1.3.8"
  # Install sphinx so that pylint will be able to import it
  - "[ $TESTS != lint ] || pip install sphinx"
  # Install docs dependencies for running the tests
  - "[ $TESTS != docs ] || pip install -e ./master[docs]"

  # Check that Twisted is not installed during previous steps on setuppy_test configuration.
  # In setuppy_test all dependencies should be installed by setuptools during tests.
  - "[ $TESTS != setuppy_test ] || ! (pip list | grep Twisted)"
  # Automatic installation of autobahn during `setup.py test` fails due to:
  # https://github.com/pypa/setuptools/issues/500
  - "[ $TESTS != setuppy_test ] || pip install autobahn Twisted"

before_script:
  # create real MySQL database for tests
  - mysql -e 'create database bbtest;'
  # create real PostgreSQL database for tests
  - psql -c 'create database bbtest;' -U postgres

# Tests running commands
script:
  - "[ $TESTS != js ] || make frontend_install_tests"
  # run tests under coverage for latest only (it's slower..)
  - "[ $TESTS != trial ]   || trial ${PARALLEL} --reporter=text --rterrors buildbot.test buildslave.test buildbot_worker.test"
  - "[ $TESTS != trial_worker ] || trial ${PARALLEL} --reporter=text --rterrors buildslave.test buildbot_worker.test"
  - "[ $TESTS != coverage ] || coverage run --rcfile=.coveragerc $(which trial) --reporter=text --rterrors buildbot.test buildslave.test buildbot_worker.test"

  # run tests that are know to work on py3
  - "[ $TESTS != py3 ] || trial ${PARALLEL} --reporter=text --rterrors buildslave.test buildbot_worker.test"

  # Run additional tests in their separate job
  - "[ $TESTS != lint ] || make pylint"
  - "[ $TESTS != lint ] || make flake8"
  - "[ $TESTS != lint ] || isort --check -df `git ls-files |grep '.py$'`"
  # Build documentation
  - "[ $TESTS != docs ] || make docs"
  # Run spell checker on documentation
  - "[ $TESTS != docs ] || make -C master/docs SPHINXOPTS=-W spelling"

  - "[ $TESTS != setuppy_test ] || (cd master; python setup.py test)"
  - "[ $TESTS != setuppy_test ] || (cd slave;  python setup.py test)"
  - "[ $TESTS != setuppy_test ] || (cd worker; python setup.py test)"

  - "[ $TESTS != trial_worker_only ] || trial ${PARALLEL} --reporter=text --rterrors buildbot.test buildbot_worker.test"

  - "echo 'travis_fold:start:piplist'; pip list; echo 'travis_fold:end:piplist'"

notifications:
  email: false

after_success:
  - "[ $TESTS != coverage ] || codecov"
sudo: false
git:
  depth: 300
